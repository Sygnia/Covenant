@inherits OwningComponentBase<ICovenantService>

@using System.IO
@using System.Collections.Generic
@using Microsoft.JSInterop

@using Covenant.Core
@using Covenant.Models.Listeners
@using Covenant.Components.Shared
@inject IJSRuntime IJSRuntime

<CovenantTable TItem="string" Items="Logs.ToList()" SearchRow="IsRowDisplayed"
               IsSearchable="IsSearchable" IsSortable="IsSortable" IsPaginated="IsPaginated" PageLength="PageLength" class="table table-hover">
    <TableHeader>
        <th class="pl-1 pr-1">
            <div class="d-flex flex-nowrap">
                Log
            </div>
        </th>
    </TableHeader>
    <TableRow Context="log">
        <tr>
            <td>@log</td>
        </tr>
    </TableRow>
</CovenantTable>

@code {
    [Parameter]
    public IEnumerable<string> Logs { get; set; }

    [Parameter]
    public string LogFile { get; set; }

    [Parameter]
    public bool IsSearchable { get; set; } = false;

    [Parameter]
    public bool IsSortable { get; set; } = false;

    [Parameter]
    public bool IsPaginated { get; set; } = true;

    [Parameter]
    public int PageLength { get; set; } = 25;

    protected override void OnInitialized()
    {
        if (File.Exists(this.LogFile))
        {
            this.Logs = this.Logs ?? File.ReadLines(this.LogFile);
        }
        this.Logs = this.Logs ?? new List<string>();
    }

    private string ToString(List<string> list)
    {
        return string.Join(",", list);
    }

    private bool IsRowDisplayed(string log, string SearchTerm)
    {
        return SearchTerm == string.Empty ||
            log.Contains(SearchTerm, StringComparison.CurrentCultureIgnoreCase);
    }
}