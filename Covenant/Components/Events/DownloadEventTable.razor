@inherits OwningComponentBase<ICovenantService>

@using System
@using Microsoft.JSInterop
@using Covenant.Core
@using Covenant.Models.Covenant
@using Covenant.Components.Shared
@inject IJSRuntime IJSRuntime

<CovenantTable TItem="DownloadEvent" Items="DownloadEvents.ToList()" SearchRow="IsRowDisplayed"
               IsSearchable="IsSearchable" IsSortable="IsSortable" IsPaginated="IsPaginated" PageLength="PageLength" class="table table-hover">
    <TableHeader>
        <SortableTableHeader TItem="DownloadEvent" TItem2="string" GetSortableProperty="(download) => download.Name">
            <HeaderContent>Name</HeaderContent>
        </SortableTableHeader>
        <SortableTableHeader TItem="DownloadEvent" TItem2="string" GetSortableProperty="(download) => download.FileName">
            <HeaderContent>FileName</HeaderContent>
        </SortableTableHeader>
        <SortableTableHeader TItem="DownloadEvent" TItem2="long" GetSortableProperty="(download) => download.FileLength">
            <HeaderContent>Size</HeaderContent>
        </SortableTableHeader>
        <SortableTableHeader TItem="DownloadEvent" TItem2="DateTime" GetSortableProperty="(download) => download.Time">
            <HeaderContent>DownloadTime</HeaderContent>
        </SortableTableHeader>
        <th></th>
    </TableHeader>
    <TableRow Context="download">
        <tr>
            <td>@download.Name</td>
            <td>@download.FileName</td>
            <td>@download.FileLength</td>
            <td>@download.Time</td>
            <td style="text-align: right;">
                <ActionDropdown Name="dropdownActionDownload">
                    <a class="dropdown-item" type="button" download href="/api/events/download/@download.Id/download">
                        <span class="fe fe-download"></span>
                        Download
                    </a>
                    <div class="dropdown-divider"></div>
                    <DropdownActionItem Item="download" OnAction="(async item => await OnDeleteEvent(download))" class="text-danger">
                        <span class="fe fe-x"></span>
                        Delete
                    </DropdownActionItem>
                </ActionDropdown>
            </td>
        </tr>
    </TableRow>
</CovenantTable>

@code {
    [Parameter]
    public List<DownloadEvent> DownloadEvents { get; set; }

    [Parameter]
    public bool IsSearchable { get; set; } = false;

    [Parameter]
    public bool IsSortable { get; set; } = true;

    [Parameter]
    public bool IsPaginated { get; set; } = true;

    [Parameter]
    public int PageLength { get; set; } = 25;

    private bool IsRowDisplayed(DownloadEvent download, string SearchTerm)
    {
        return SearchTerm == string.Empty ||
            download.Name.Contains(SearchTerm, StringComparison.CurrentCultureIgnoreCase) ||
            download.FileName.Contains(SearchTerm, StringComparison.CurrentCultureIgnoreCase) ||
            download.FileLength.ToString().Contains(SearchTerm, StringComparison.CurrentCultureIgnoreCase);
    }

    private async Task OnDeleteEvent(Event ev)
    {
        try
        {
            await Service.DeleteEvent(ev.Id);
            Service.DisposeContext();
        }
        catch (Exception e) when (e is ControllerNotFoundException || e is ControllerBadRequestException || e is ControllerUnauthorizedException)
        {

        }
    }
}