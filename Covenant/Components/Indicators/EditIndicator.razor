@page "/indicator/edit/{IndicatorId:int}"
@attribute [Authorize(Roles = "User, Administrator")]
@inherits OwningComponentBase<ICovenantService>

@using Covenant.Core
@using Covenant.Models.Indicators
@inject NavigationManager NavigationManager

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3">
    <h1 class="h2">Edit Indicator</h1>
</div>

<IndicatorForm Indicator="Indicator" DisableType="true" OnSubmit="OnEdit">
    <button type="submit" class="btn btn-primary">
        <span class="fe fe-edit"></span>
        Edit
    </button>
</IndicatorForm>

@code {
    [Parameter]
    public int IndicatorId { get; set; }

    [Parameter]
    public Indicator Indicator { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.Indicator = this.Indicator ?? await Service.GetIndicator(this.IndicatorId);
    }

    private async Task OnEdit(Indicator indicator)
    {
        switch (indicator.Type)
        {
            case IndicatorType.FileIndicator:
                this.Indicator = await Service.EditIndicator((FileIndicator)indicator);
                break;
            case IndicatorType.NetworkIndicator:
                this.Indicator = await Service.EditIndicator((NetworkIndicator)indicator);
                break;
            case IndicatorType.TargetIndicator:
                this.Indicator = await Service.EditIndicator((TargetIndicator)indicator);
                break;
        }
        NavigationManager.NavigateTo("/data");
    }
}
