@page "/credential/edit/{CredentialId:int}"
@attribute [Authorize(Roles = "User, Administrator")]
@inherits OwningComponentBase<ICovenantService>

@using Covenant.Core
@using Covenant.Models.Covenant
@inject NavigationManager NavigationManager

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3">
    <h1 class="h2">Edit Credential</h1>
</div>

<CredentialForm Credential="Credential" DisableType="true" OnSubmit="OnEdit">
    <button type="submit" class="btn btn-primary">
        <span class="fe fe-edit"></span>
        Edit
    </button>
</CredentialForm>

@code {
    [Parameter]
    public int CredentialId { get; set; }

    [Parameter]
    public CapturedCredential Credential { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.Credential = this.Credential ?? await Service.GetCredential(this.CredentialId);
    }

    private async Task OnEdit(CapturedCredential credential)
    {
        switch (credential.Type)
        {
            case CredentialType.Password:
                this.Credential = await Service.EditPasswordCredential((CapturedPasswordCredential)credential);
                break;
            case CredentialType.Hash:
                this.Credential = await Service.EditHashCredential((CapturedHashCredential)credential);
                break;
            case CredentialType.Ticket:
                this.Credential = await Service.EditTicketCredential((CapturedTicketCredential)credential);
                break;
        }
        NavigationManager.NavigateTo("/data");
    }
}